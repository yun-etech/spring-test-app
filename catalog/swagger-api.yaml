apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: Etech-swagger-info
  description: The demo API for Tanzu Application Platform GUI
  links:
    - url: https://spring-test-app.default.user01.tanzu.lab/swagger-ui/index.html
      title: Member API
      icon: docs
spec:
  type: openapi
  lifecycle: experimental
  owner: yun-etech
  system: tanzu-roadshow # Or specify system name of your choice
  definition: |
    openapi: 3.0.2
    servers:
      - url: https://spring-test-app.default.user01.tanzu.lab/
    info:
      description: |-
        This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
        Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
        You can now help us improve the API whether it's by making changes to the definition itself or to the code.
        That way, with time, we can improve the API in general, and expose some of the new features in OAS3.
        Some useful links:
        - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
        - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
      version: '1.0.11'
      title: Member API - OpenAPI 3.0
      tags:
        - name: member
          description: Member get/set API
          externalDocs:
            description: Find out more
            url: 'http://swagger.io'
        - name: store
          description: Access to Petstore orders
          externalDocs:
            description: Find out more about our store
            url: 'http://swagger.io'
        - name: user
          description: Operations about user
    paths:
      /members/test:
        get:
          tags:
            - member
          summary: Finds member
          description: Multiple status values can be provided with comma separated strings
          operationId: findPetsByStatus
          parameters:
            - name: status
              in: query
              description: Status values that need to be considered for filter
              required: false
              explode: true
              schema:
                type: string
                enum:
                  - available
                  - pending
                  - sold
                default: available
          responses:
            '200':
              description: successful operation
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pet'
      /members/test-api:
        get:
          tags:
            - member
          summary: search member by id
          description: >-
            Multiple tags can be provided with comma separated strings. Use tag1,
            tag2, tag3 for testing.
          operationId: findPetsByTags
          parameters:
            - name: tags
              in: query
              description: Tags to filter by
              required: false
              explode: true
              schema:
                type: array
                items:
                  type: string
          responses:
            '200':
              description: successful operation
              content:
                application/xml:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pet'
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pet'
          
      